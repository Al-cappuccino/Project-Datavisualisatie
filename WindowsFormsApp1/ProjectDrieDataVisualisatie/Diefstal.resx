<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="helpButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>